name: ght-init
on:
  push:
    branches:
      - master
jobs:
  ght-configuration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Create GHT Branch
        uses: peterjgrainger/action-create-branch@v1.0.0
        with:
          branch: ght/master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
        if: success() || failure()
        with:
          ref: ght/master

      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jinja2 jinja2-cli jinja2-time pyyaml

      - name: Here is what is available during Initial Commit
        run: jq . $GITHUB_EVENT_PATH

      - name: Create ght-repository.yaml file
        run: |
          tmpfile=$(mktemp)
          cat > $tmpfile <<-EOF

          #
          # These were picked up during Initial Commit...
          github:
            author:
              email: ${{ github.event.head_commit.author.email }}
              name: ${{ github.event.head_commit.author.name }}
              username: ${{ github.event.head_commit.author.username }}
            repository:
              name: ${{ github.event.repository.name }}
              full_name: ${{ github.event.repository.full_name }}
              description: ${{ github.event.repository.description }}
              private: ${{ github.event.repository.private }}
          EOF
          cat $tmpfile >> .github/ght.yaml

      - name: Render ght.yaml configuration
        run: |
          .github/bin/ght-render.sh render_configuration

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ght/master
          branch: ght/configure
          branch-suffix: none
          commit-message: Start ght-render configuration
          title: ght-render configuration
          assignees: ${{ github.actor }}
          labels: ght
          body: |
            Use this PR to edit your ght-render configuration file [ght.yaml][1]

            Once a valid configuration is supplied, ght-render will create a separate pull-request
            with the rendered template.

            Here is a list of things that  I can't automatte yet:
              - [Protect][2] your the branches:
                - [ ] The `master` branch
                - [ ] The `ght/master` branch
              - Configure codecov.io:
                - [ ] Add [CODECOV_TOKEN][codecov] to [GitHub Secrets][secrets]
                - [ ] (private repo) Add [CODECOV_BADGE_TOKEN][codecov-badge] to [ght.yaml][1]
              - Configure codacy.com:
                - [ ] Add your [Codacy badge id][codacy-badge] a.k.a. `project-id` to [ght.yaml][1]
                - [ ] (optional) Add your [CODACY_API_TOKEN][codacy-coverage] to [GitHub Secrets][secrets] for code coverage
              - Configure anaconda.org
                - [ ] Add a [ANACONDA_API_TOKEN][anaconda] to [GitHub Secrets][secrets].
                      The token must have `api:read, api:write, conda` scope. We suggest calling it `zeroae-cli-rw`.
              - (public repos) Configure PyPi.org
                - [ ] Add your [PYPI_API_TOKEN][pypi] to [GitHub Secrets][secrets]

            [1]: https://github.com/${{ github.repository }}/edit/ght/configure/.github/ght.yaml
            [2]: https://github.com/${{ github.repository }}/settings/branch_protection_rules/new
            [codecov]: https://codecov.io/gh/${{ github.repository }}/settings
            [codecov-badge]: https://codecov.io/gh/${{ github.repository }}/settings/badge
            [codacy-badge]: https://app.codacy.com/gh/${{ github.repository }}/settings
            [codacy-coverage]: https://app.codacy.com/gh/${{ github.repository }}/settings/coverage
            [secrets]: https://github.com/${{ github.repository }}/settings/secrets
            [pypi]: https://pypi.org/manage/account/token/
            [anaconda]: https://anaconda.org/${{ github.event.repository.owner.name }}/settings/access

      - name: Remind owner to replace their PyPi
        uses: maxkomarychev/oction-create-issue@v0.7.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Replace PyPi Personal Access Token with package restricted one
          body: |
            This is a reminder that after you have uploaded the first version of your package
            to PyPi, that you should replace your PAT with a package-restricted one.
