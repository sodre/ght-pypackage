{% raw -%}
name: builder
on: [pull_request]
jobs:
  setuptools-build:
    strategy:
      matrix:
{%- endraw %}
        {%- if cookiecutter.noarch_python == "y" %}
        os: [ubuntu-latest]
        python-version: [3.7]
        {%- else %}
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8]
        {%- endif %}
{%- raw %}
    name: setuptools py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v1.1.1
      - uses: actions/cache@v1
        id: cache
        with:
          path: .eggs
          key: ${{  matrix.os }}-${{ matrix.python-version }}-eggs-${{ hashFiles('setup.py') }}
      - run: make dist
      - name: Generate Artifact if PR is assigned.
        if: github.event.pull_request.assignee != null
        uses: actions/upload-artifact@v1.0.0
        with:
          name: setuptools-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist
  conda-build:
    strategy:
      matrix:
{%- endraw %}
        {%- if cookiecutter.noarch_python == "y" %}
        os: [ubuntu-latest]
        python-version: [3.7]
        {%- else %}
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8]
        {%- endif %}
{%- raw %}
    name: conda py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.assignee != null
    steps:
      - uses: actions/checkout@master
      - uses: s-weigand/setup-conda@master
        with:
          python-version: ${{ matrix.python-version }}
{%- endraw %}
          conda-channels: anaconda, conda-forge, {{ cookiecutter.anaconda_organization }}
{%- raw %}
      - run: |
          conda install conda-build setuptools_scm
          conda render . > rendered-meta.yaml
      - uses: actions/cache@v1
        id: conda-pkgs-cache
        with:
          path: /usr/share/miniconda/pkgs
          key: ${{  runner.os }}-conda-py${{ matrix.python-version }}-${{ hashFiles('rendered-meta.yaml') }}
      - run: conda install conda-verify
      - run: conda build --output-folder conda-bld .
{%- endraw %}
